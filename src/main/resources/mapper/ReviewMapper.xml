<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Tripsite.mapper.ReviewMapper">
	<resultMap type="review" id="review">
		<id column="REVIEW_NO" property="rno" />
		<result column="REVIEW_TITLE" property="rTitle" />
		<result column="REVIEW_CONTENT" property="rContent" />
		<result column="REVIEW_COMMENT_TIME" property="rTime" />
		<result column="MEMBER_ID" property="rId" />
		<result column="REVIEW_COUNT" property="rCount" />
		<result column="MEMBER_NICK" property="rNick" />
		<result column="RHATE" property="rHate" />
		<result column="RLIKE" property="rLike" />
	</resultMap>
	<resultMap type="comment" id="comment">
		<id column="REVIEW_COMMENT_NO" property="cNo"/>
		<result column="REVIEW_NO" property="rNo"/>
		<result column="MEMBER_ID" property="cId"/>
		<result column="MEMBER_NICK" property="cNick" />
		<result column="REVIEW_COMMENT_TIME" property="cTime"/>
		<result column="REVIEW_COMMENT_CONTENT" property="cContent"/>
		<result column="CLIKE" property="cLike" />
		<result column="CHATE" property="cHate" />
	</resultMap>

	<select id="selectAllreview" resultMap="review" parameterType="int">
		SELECT * from(
		SELECT CEIL(rownum/10) AS pageno , d.* from(
		SELECT r.REVIEW_TITLE ,r.REVIEW_CONTENT,TO_CHAR(r.review_comment_time,'YYYY-MM-DD') as REVIEW_COMMENT_TIME ,r.REVIEW_COUNT,r.MEMBER_ID  ,m.MEMBER_NICK,NVL(rhate,0) AS rhate ,NVL(rlike,0) AS rlike, r.REVIEW_NO  
		FROM REVIEW r JOIN MEMBER m ON r.MEMBER_ID =m.MEMBER_ID
		LEFT OUTER JOIN (SELECT rh.review_no AS rhno, count(*) AS rhate FROM REVIEW_HATE rh GROUP BY rh.REVIEW_NO) ON rhno=r.review_no
		LEFT OUTER JOIN (SELECT rl.review_no AS rlno, count(*) AS rlike FROM REVIEW_LIKE rl GROUP BY rl.REVIEW_NO) ON rlno=r.review_no
		ORDER BY REVIEW_NO DESC) d)
		WHERE pageno=#{pageNo}
	</select>
	
	<select id="countreview">
		select count(*) from REVIEW
	</select>
	
	<select id="selectmyreview" resultMap="review" parameterType="hashmap">
		SELECT * from(
		SELECT CEIL(rownum/10) AS pageno , d.* from(
		SELECT r.REVIEW_TITLE ,r.REVIEW_CONTENT,TO_CHAR(r.review_comment_time,'YYYY-MM-DD') as REVIEW_COMMENT_TIME ,r.REVIEW_COUNT,r.MEMBER_ID  ,m.MEMBER_NICK,NVL(rhate,0) AS rhate ,NVL(rlike,0) AS rlike, r.REVIEW_NO  
		FROM REVIEW r JOIN MEMBER m ON r.MEMBER_ID =m.MEMBER_ID
		LEFT OUTER JOIN (SELECT rh.review_no AS rhno, count(*) AS rhate FROM REVIEW_HATE rh GROUP BY rh.REVIEW_NO) ON rhno=r.review_no
		LEFT OUTER JOIN (SELECT rl.review_no AS rlno, count(*) AS rlike FROM REVIEW_LIKE rl GROUP BY rl.REVIEW_NO) ON rlno=r.review_no
		where r.MEMBER_ID=#{mId}
		ORDER BY REVIEW_NO DESC) d)
		WHERE pageno=#{pageNo}
	</select>
	
	<select id="countmyreview" parameterType="String">
		select count(*) from REVIEW where MEMBER_ID=#{mId}
	</select>
	
	<select id="selectmycomment" resultMap="comment" parameterType="hashmap">
		SELECT * from(
		SELECT CEIL(rownum/10) AS pageno , d.* from(
		SELECT rc.REVIEW_COMMENT_NO ,rc.REVIEW_NO,rc.MEMBER_ID ,m.MEMBER_NICK,TO_CHAR(rc.review_comment_time,'YYYY-MM-DD') as REVIEW_COMMENT_TIME, rc.REVIEW_COMMENT_CONTENT ,NVL(clike,0) AS clike ,NVL(chate,0) AS chate
		FROM REVIEW_COMMENT rc  JOIN MEMBER m ON rc.MEMBER_ID =m.MEMBER_ID
		LEFT OUTER JOIN (SELECT rch.review_COMMENT_no AS rchno, count(*) AS chate FROM REVIEW_COMMENT_HATE rch GROUP BY rch.REVIEW_COMMENT_NO) ON rchno=rc.review_COMMENT_no
		LEFT OUTER JOIN (SELECT rcl.review_COMMENT_no AS rclno, count(*) AS clike FROM REVIEW_COMMENT_LIKE rcl GROUP BY rcl.REVIEW_COMMENT_NO) ON rclno=rc.review_COMMENT_no
		where rc.MEMBER_ID=#{mId}
		ORDER BY rc.REVIEW_COMMENT_NO DESC) d)
		WHERE pageno=#{pageNo}
	</select>
	
	
	<select id="countmycomment" parameterType="String">
		select count(*) from REVIEW_COMMENT where MEMBER_ID=#{mId}
	</select>
	
</mapper>






